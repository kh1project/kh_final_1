<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean> 
	
	<!-- <context:annotation-config /> -->
	<context:component-scan base-package="com.web.seenema" />
	
	<!-- 
		데이터베이스 연결 객체를 빈(bean)에 등록한다.
	 -->
	 <beans:bean id="dataSource"
	 			 class="org.springframework.jdbc.datasource.DriverManagerDataSource">
	 	<beans:property name="driverClassName" value="oracle.jdbc.OracleDriver"></beans:property>
	 	<beans:property name="url" value="jdbc:oracle:thin:@localhost:50000:xe"></beans:property>
	 	<beans:property name="username" value="web_final_oracle"></beans:property>
	 	<beans:property name="password" value="web_final_oracle"></beans:property>
	 </beans:bean>
	 
	 <!-- 
	 	 빈에 등록된 데이터베이스 연결 객체를 JdbcTemplate에 등록(주입: DI - Dependency Injection)한다. 
	  -->
	  <beans:bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
	  	<beans:property name="dataSource" ref="dataSource"></beans:property>
	  </beans:bean>
	  
	  <!-- mybatis 연동을 위한 bean 등록 -->
	  <beans:bean id="sqlSessionFactory"
	  			  class="org.mybatis.spring.SqlSessionFactoryBean">
	  	<beans:property name="dataSource" ref="dataSource"></beans:property>
	  	<beans:property name="configLocation"
	  					value="classpath:/mybatis/mybatis-config.xml"></beans:property>
	  	<beans:property name="mapperLocations"
	  					value="classpath:/mybatis/mapper/*.xml"></beans:property>
	  </beans:bean>
	  
	  <beans:bean id="sqlSession"
	  			  class="org.mybatis.spring.SqlSessionTemplate">
	  	<beans:constructor-arg index="0" ref="sqlSessionFactory"></beans:constructor-arg>
	  </beans:bean>
	  
</beans:beans>
